"use client";

import React, { useState } from "react";
import { Card } from "@/components/ui/card";
import { Button } from "@/components/ui/button";
import { Input } from "@/components/ui/input";
import { Badge } from "@/components/ui/badge";
import { Separator } from "@/components/ui/separator";
import { ArrowLeft, CreditCard, Lock, CheckCircle, Clock, MapPin, Users } from "lucide-react";
import Link from "next/link";
import Image from "next/image";
import { Label } from "@/components/ui/label";

// Mock data cho giao di·ªán
const mockData = {
  movie: {
    title: "Thanh G∆∞∆°m Di·ªát Qu·ª∑: Ph√©p M√†u T·ª´ H∆°i Th·ªü",
    poster: "/images/kimetsu-official-poster.jpg",
    duration: "115 ph√∫t",
  },
  schedule: {
    date: "08/07/2025",
    time: "18:00",
    theater: "Cinestar Qu·ªëc Thanh",
    room: "Ph√≤ng 1",
  },
  selectedSeats: ["D5", "D6", "D7"],
  ticketType: "adult",
  price: 120000,
  total: 360000,
};

const paymentMethods = [
  {
    id: "momo",
    name: "V√≠ MoMo",
    icon: "üíú",
    description: "Thanh to√°n qua v√≠ MoMo",
  },
  {
    id: "vnpay",
    name: "VNPay",
    icon: "üíô",
    description: "Thanh to√°n qua VNPay",
  },
  {
    id: "zalopay",
    name: "ZaloPay",
    icon: "üíö",
    description: "Thanh to√°n qua ZaloPay",
  },
  {
    id: "bank",
    name: "Chuy·ªÉn kho·∫£n ng√¢n h√†ng",
    icon: "üè¶",
    description: "Chuy·ªÉn kho·∫£n tr·ª±c ti·∫øp",
  },
];

export default function PaymentPage() {
  const [selectedPaymentMethod, setSelectedPaymentMethod] = useState<string>("");
  const [isProcessing, setIsProcessing] = useState(false);
  const [isSuccess, setIsSuccess] = useState(false);

  const formatPrice = (price: number) => {
    return new Intl.NumberFormat("vi-VN", {
      style: "currency",
      currency: "VND",
    }).format(price);
  };

  const handlePayment = () => {
    if (!selectedPaymentMethod) return;
    
    setIsProcessing(true);
    
    // M√¥ ph·ªèng x·ª≠ l√Ω thanh to√°n
    setTimeout(() => {
      setIsProcessing(false);
      setIsSuccess(true);
    }, 3000);
  };

  if (isSuccess) {
    return (
      <div className="bg-background text-foreground min-h-screen flex items-center justify-center">
        <Card className="p-8 max-w-md w-full text-center">
          <CheckCircle className="w-16 h-16 text-green-500 mx-auto mb-4" />
          <h1 className="text-2xl font-bold mb-2">Thanh to√°n th√†nh c√¥ng!</h1>
          <p className="text-muted-foreground mb-6">
            V√© c·ªßa b·∫°n ƒë√£ ƒë∆∞·ª£c ƒë·∫∑t th√†nh c√¥ng. Vui l√≤ng ki·ªÉm tra email ƒë·ªÉ xem chi ti·∫øt.
          </p>
          <div className="space-y-4">
            <div className="bg-muted p-4 rounded-lg">
              <p className="font-medium">M√£ ƒë·∫∑t v√©: #BK123456</p>
              <p className="text-sm text-muted-foreground">
                Vui l√≤ng gi·ªØ m√£ n√†y ƒë·ªÉ nh·∫≠n v√© t·∫°i r·∫°p
              </p>
            </div>
            <Link href="/">
              <Button className="w-full">V·ªÅ trang ch·ªß</Button>
            </Link>
          </div>
        </Card>
      </div>
    );
  }

  return (
    <div className="bg-background text-foreground min-h-screen">
      {/* Header */}
      <div className="bg-card border-b">
        <div className="max-w-7xl mx-auto px-4 py-4">
          <div className="flex items-center gap-4">
            <Link href="/booking/1">
              <Button variant="ghost" size="sm" className="gap-2">
                <ArrowLeft className="w-4 h-4" />
                Quay l·∫°i
              </Button>
            </Link>
            <div>
              <h1 className="text-lg font-semibold">Thanh to√°n</h1>
              <p className="text-sm text-muted-foreground">
                Ho√†n t·∫•t ƒë·∫∑t v√© c·ªßa b·∫°n
              </p>
            </div>
          </div>
        </div>
      </div>

      <div className="max-w-4xl mx-auto px-4 py-8">
        <div className="grid grid-cols-1 lg:grid-cols-3 gap-8">
          {/* Form thanh to√°n */}
          <div className="lg:col-span-2 space-y-6">
            {/* Th√¥ng tin ƒë·∫∑t v√© */}
            <Card className="p-6">
              <h2 className="text-xl font-semibold mb-4">Th√¥ng tin ƒë·∫∑t v√©</h2>
              <div className="flex gap-4">
                <Image
                  src={mockData.movie.poster}
                  alt={mockData.movie.title}
                  width={80}
                  height={120}
                  className="rounded-lg"
                />
                <div className="flex-1">
                  <h3 className="font-semibold mb-2">{mockData.movie.title}</h3>
                  <div className="space-y-1 text-sm text-muted-foreground">
                    <div className="flex items-center gap-2">
                      <Clock className="w-4 h-4" />
                      {mockData.schedule.date} ‚Ä¢ {mockData.schedule.time}
                    </div>
                    <div className="flex items-center gap-2">
                      <MapPin className="w-4 h-4" />
                      {mockData.schedule.theater}
                    </div>
                    <div className="flex items-center gap-2">
                      <Users className="w-4 h-4" />
                      {mockData.schedule.room}
                    </div>
                  </div>
                  <div className="mt-3">
                    <p className="text-sm font-medium">Gh·∫ø ƒë√£ ch·ªçn:</p>
                    <div className="flex flex-wrap gap-1 mt-1">
                      {mockData.selectedSeats.map((seat) => (
                        <Badge key={seat} variant="secondary">
                          {seat}
                        </Badge>
                      ))}
                    </div>
                  </div>
                </div>
              </div>
            </Card>

            {/* Ph∆∞∆°ng th·ª©c thanh to√°n */}
            <Card className="p-6">
              <h2 className="text-xl font-semibold mb-4">Ph∆∞∆°ng th·ª©c thanh to√°n</h2>
              <div className="space-y-3">
                {paymentMethods.map((method) => (
                  <div
                    key={method.id}
                    className={`p-4 rounded-lg border-2 cursor-pointer transition-all ${
                      selectedPaymentMethod === method.id
                        ? "border-primary bg-primary/5"
                        : "border-border hover:border-primary/50"
                    }`}
                    onClick={() => setSelectedPaymentMethod(method.id)}
                  >
                    <div className="flex items-center gap-3">
                      <span className="text-2xl">{method.icon}</span>
                      <div className="flex-1">
                        <p className="font-medium">{method.name}</p>
                        <p className="text-sm text-muted-foreground">{method.description}</p>
                      </div>
                      <div className="flex items-center gap-2">
                        <Lock className="w-4 h-4 text-green-500" />
                        <span className="text-xs text-green-500">B·∫£o m·∫≠t</span>
                      </div>
                    </div>
                  </div>
                ))}
              </div>
            </Card>

            {/* Th√¥ng tin kh√°ch h√†ng */}
            <Card className="p-6">
              <h2 className="text-xl font-semibold mb-4">Th√¥ng tin kh√°ch h√†ng</h2>
              <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
                <div>
                  <Label htmlFor="fullName">H·ªç v√† t√™n</Label>
                  <Input id="fullName" placeholder="Nh·∫≠p h·ªç v√† t√™n" />
                </div>
                <div>
                  <Label htmlFor="phone">S·ªë ƒëi·ªán tho·∫°i</Label>
                  <Input id="phone" placeholder="Nh·∫≠p s·ªë ƒëi·ªán tho·∫°i" />
                </div>
                <div>
                  <Label htmlFor="email">Email</Label>
                  <Input id="email" placeholder="Nh·∫≠p email" type="email" />
                </div>
                <div>
                  <Label htmlFor="cmnd">CMND/CCCD</Label>
                  <Input id="cmnd" placeholder="Nh·∫≠p s·ªë CMND/CCCD" />
                </div>
              </div>
            </Card>
          </div>

          {/* T√≥m t·∫Øt thanh to√°n */}
          <div className="space-y-6">
            <Card className="p-6">
              <h3 className="font-semibold mb-4">T√≥m t·∫Øt thanh to√°n</h3>
              <div className="space-y-3">
                <div className="flex justify-between">
                  <span>V√© ng∆∞·ªùi l·ªõn x{mockData.selectedSeats.length}</span>
                  <span>{formatPrice(mockData.price * mockData.selectedSeats.length)}</span>
                </div>
                <Separator />
                <div className="flex justify-between font-semibold">
                  <span>T·ªïng c·ªông</span>
                  <span className="text-lg text-primary">{formatPrice(mockData.total)}</span>
                </div>
              </div>
            </Card>

            <Card className="p-6">
              <div className="space-y-4">
                <div className="flex items-center gap-2 text-sm text-muted-foreground">
                  <Lock className="w-4 h-4" />
                  <span>Th√¥ng tin thanh to√°n ƒë∆∞·ª£c b·∫£o m·∫≠t</span>
                </div>
                <Button 
                  className="w-full" 
                  size="lg"
                  disabled={!selectedPaymentMethod || isProcessing}
                  onClick={handlePayment}
                >
                  {isProcessing ? (
                    <div className="flex items-center gap-2">
                      <div className="w-4 h-4 border-2 border-white border-t-transparent rounded-full animate-spin"></div>
                      ƒêang x·ª≠ l√Ω...
                    </div>
                  ) : (
                    <div className="flex items-center gap-2">
                      <CreditCard className="w-4 h-4" />
                      Thanh to√°n {formatPrice(mockData.total)}
                    </div>
                  )}
                </Button>
                <p className="text-xs text-muted-foreground text-center">
                  B·∫±ng vi·ªác ti·∫øp t·ª•c, b·∫°n ƒë·ªìng √Ω v·ªõi c√°c ƒëi·ªÅu kho·∫£n v√† ƒëi·ªÅu ki·ªán c·ªßa ch√∫ng t√¥i
                </p>
              </div>
            </Card>
          </div>
        </div>
      </div>
    </div>
  );
}